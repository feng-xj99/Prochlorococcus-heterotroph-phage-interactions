".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.5,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##turquoise
modules = c("turquoise")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.65,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##blue
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.3,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##yellow
modules = c("yellow")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.2,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##brown
modules = c("brown")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.3,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
ADJ=abs(cor(dat_total_matrix_t,use="p"))^6
Alldegrees =intramodularConnectivity(ADJ, moduleColors)
write.csv(Alldegrees, file = "intramodularConnectivity.csv")
##blue
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.5,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("turquoise")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.7,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##blue
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.6,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.65,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.7,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.7,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.75,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.66,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.68,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.69,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.71,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.72,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.73,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.74,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##blue
modules = c("blue")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.75,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##turquoise
modules = c("turquoise")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.75,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("turquoise")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.8,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
modules = c("turquoise")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.78,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
##turquoise
modules = c("turquoise")
probes = names (dat_total_matrix_t)
inModule = is.finite(match(moduleColors, modules));
modProbes = probes [ inModule];
modTOM = TOM[ inModule,inModule] ;
dimnames (modTOM) = list (modProbes,modProbes)
cyt = exportNetworkToCytoscape (
modTOM,
edgeFile = paste("CytoscapeInput-edges-",paste(modules,collapse="-"),
".txt", sep=""),
nodeFile = paste("CytoscapeInput-nodes-",paste(modules,collapse="-"),
".txt", sep=""),
weighted = TRUE,
threshold = 0.785,
nodeNames = modProbes ,
nodeAttr = moduleColors[inModule]
)
####hub基因匹配
hub<-read.table("hub.csv",header = TRUE,sep = ",")
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="gene_id"))%>%left_join(gene_info,by=c("gene_id"="GID"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
total_matrix<-column_to_rownames(tpm_hub,var='gene_id')%>%
write.table (total_EX_ase_SE_mean,file ="total_EX_ase_SE_mean.csv", sep =",", row.names =T)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="gene_id"))%>%left_join(gene_info,by=c("gene_id"="GID"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
head
head(hub)
head(gene_matrix)
####hub基因匹配
hub<-read.table("hub.csv",header = TRUE,sep = ",")
View(hub)
gene_info
####hub基因匹配
hub<-read.csv("hub.csv",header = TRUE,sep = ",")
gene_info<-read.csv("emapper.annotations.csv",header = TRUE,sep = ",")
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="GID"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
head(gene_info)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="gene_id"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
head(hub)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="gene_id"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
library(dplyr)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="gene_id"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
gene_matrix
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="query"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
tpm_hub<-left_join(hub,gene_matrix,by=c("X"="gene_id"))%>%left_join(gene_info,by=c("X"="query"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
####hub基因匹配
hub<-read.csv("hub.csv",header = TRUE,sep = ",")
gene_info<-read.csv("emapper.annotations.csv",header = TRUE,sep = ",")
tpm_hub<-left_join(hub,gene_matrix,by=c("X"="gene_id"))%>%left_join(gene_info,by=c("X"="query"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
tpm_hub<-left_join(hub,gene_matrix,by=c("X"="gene_id"))
head(hub)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="query"))%>%select(-X,-affinity,-GO,-KEGG_ko,-KEGG_Pathway)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="query"))
head(tpm_hub)
tpm_hub<-left_join(hub,gene_matrix,by=c("gene_id"="X"))%>%left_join(gene_info,by=c("gene_id"="query"))%>%select(gene_id,Preferred_name,Description,3:24)
total_matrix<-column_to_rownames(tpm_hub,var='gene_id')
write.table (tpm_hub,file ="tpm_hub.xls", sep =",", row.names =T)
tpm_hub$name<-paste(tpm_hub$gene_id,"_",tpm_hub$gene_name)
library(reshape2)
sample_type<-select(sample_info,name,type,day)
sample_type$type1<-paste(sample_type$type,"_",sample_type$day)
head(tpm_hub)
tpm_hub_plot<-melt(tpm_hub,id.vars =c("gene_id","color","description","name"))%>%left_join(sample_type,by=c("variable"="name"))
tpm_hub_plot<-melt(tpm_hub,id.vars =c("gene_id","color","Description","name"))%>%left_join(sample_type,by=c("variable"="name"))
View(tpm_hub_plot)
p
tpm_hub_plot<-melt(tpm_hub,id.vars =c("gene_id","color","Description","name"))%>%left_join(sample_type,by=c("variable"="name"))%>%slice(61:1320)
library(Rmisc)
tpm_hub_plot$value <- as.numeric(tpm_hub_plot$value)
tpm_hub_plot_1_bubble<- summarySE(tpm_hub_plot, measurevar="value", groupvars=c("name","type1","description","color"))
tpm_hub_plot_1_bubble<- summarySE(tpm_hub_plot, measurevar="value", groupvars=c("name","type1","Description","color"))
tpm_hub_plot_1_bubble$lg<-log10(tpm_hub_plot_1_bubble$value+1)
tpm_hub_plot_1_bubble$lg <- ifelse(tpm_hub_plot_1_bubble$lg == 0, NA, tpm_hub_plot_1_bubble$lg)
library(ggplot2)
tpm_hub_plot_1_bubble$type1<-factor(tpm_hub_plot_1_bubble$type1,levels=c("P _ 12",  "PC _ 42", "PR _ 12","PAC _ 42", "PA _ 12", "PAC _ 12", "PAR _ 12"))
p_tpm_hub_plot_1_bubble<-ggplot(tpm_hub_plot_1_bubble,aes(x=type1,y=name))+
scale_fill_gradientn(colours = colorRampPalette(c("navy","white","firebrick3"))(100))+
theme_bw()+geom_point(aes(size=`lg`, fill =`lg`),shape=21)+
theme(panel.grid=element_line(colour ="#696969", size=0.2,linetype=3), axis.text.x =element_text(angle =45))+xlab(NULL) + ylab(NULL)+
theme(panel.border = element_rect(fill=NA,color="black", size=0.8, linetype="solid"))+
facet_wrap(~color,nrow = 1,scales = 'free')
ggsave (p_tpm_hub_plot_1_bubble, filename="p_tpm_hub_plot_1_bubble.pdf", width=20, height=6)
View(tpm_hub_plot)
tpm_hub$name<-paste(tpm_hub$gene_id,"_",tpm_hub$Preferred_name)
library(reshape2)
sample_type<-select(sample_info,name,type,day)
sample_type$type1<-paste(sample_type$type,"_",sample_type$day)
tpm_hub_plot<-melt(tpm_hub,id.vars =c("gene_id","color","Description","name"))%>%left_join(sample_type,by=c("variable"="name"))%>%slice(61:1320)
library(Rmisc)
tpm_hub_plot$value <- as.numeric(tpm_hub_plot$value)
tpm_hub_plot_1_bubble<- summarySE(tpm_hub_plot, measurevar="value", groupvars=c("name","type1","Description","color"))
tpm_hub_plot_1_bubble$lg<-log10(tpm_hub_plot_1_bubble$value+1)
tpm_hub_plot_1_bubble$lg <- ifelse(tpm_hub_plot_1_bubble$lg == 0, NA, tpm_hub_plot_1_bubble$lg)
library(ggplot2)
tpm_hub_plot_1_bubble$type1<-factor(tpm_hub_plot_1_bubble$type1,levels=c("P _ 12",  "PC _ 42", "PR _ 12","PAC _ 42", "PA _ 12", "PAC _ 12", "PAR _ 12"))
p_tpm_hub_plot_1_bubble<-ggplot(tpm_hub_plot_1_bubble,aes(x=type1,y=name))+
scale_fill_gradientn(colours = colorRampPalette(c("navy","white","firebrick3"))(100))+
theme_bw()+geom_point(aes(size=`lg`, fill =`lg`),shape=21)+
theme(panel.grid=element_line(colour ="#696969", size=0.2,linetype=3), axis.text.x =element_text(angle =45))+xlab(NULL) + ylab(NULL)+
theme(panel.border = element_rect(fill=NA,color="black", size=0.8, linetype="solid"))+
facet_wrap(~color,nrow = 1,scales = 'free')
ggsave (p_tpm_hub_plot_1_bubble, filename="p_tpm_hub_plot_1_bubble.pdf", width=20, height=6)
View(p_tpm_hub_plot_1_bubble)
View(tpm_hub_plot_1_bubble)
View(tpm_hub_plot)
View(tpm_hub)
p_tpm_hub_plot_1_bubble<-ggplot(tpm_hub_plot_1_bubble,aes(x=type1,y=name))+
scale_fill_gradientn(colours = colorRampPalette(c("navy","white","firebrick3"))(100))+
theme_bw()+geom_point(aes(size=`lg`, fill =`lg`),shape=21)+
theme(panel.grid=element_line(colour ="#696969", size=0.2,linetype=3), axis.text.x =element_text(angle =45))+xlab(NULL) + ylab(NULL)+
theme(panel.border = element_rect(fill=NA,color="black", size=0.8, linetype="solid"))+
facet_wrap(~color,nrow = 1,scales = 'free')
tpm_hub_plot_1_bubble$type1<-factor(tpm_hub_plot_1_bubble$type1,levels=c("P _ 12", "PR _ 12", "PA _ 12", "PAC _ 12", "PAR _ 12",  "PC _ 42","PAC _ 42"))
p_tpm_hub_plot_1_bubble<-ggplot(tpm_hub_plot_1_bubble,aes(x=type1,y=name))+
scale_fill_gradientn(colours = colorRampPalette(c("navy","white","firebrick3"))(100))+
theme_bw()+geom_point(aes(size=`lg`, fill =`lg`),shape=21)+
theme(panel.grid=element_line(colour ="#696969", size=0.2,linetype=3), axis.text.x =element_text(angle =45))+xlab(NULL) + ylab(NULL)+
theme(panel.border = element_rect(fill=NA,color="black", size=0.8, linetype="solid"))+
facet_wrap(~color,nrow = 1,scales = 'free')
ggsave (p_tpm_hub_plot_1_bubble, filename="p_tpm_hub_plot_2_bubble.pdf", width=20, height=6)
