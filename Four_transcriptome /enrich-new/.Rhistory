data[[i]][[j]] <- unclass(data[[i]][[j]])
}
}
}
# 报错在此处，由于data中的AsIs对象的存在
data <- lapply(data, ggplot2:::scales_map_df, scales = npscales)
}
data <- by_layer(function(l, d) l$compute_geom_2(d))
data <- by_layer(function(l, d) l$finish_statistics(d))
data <- layout$finish_data(data)
plot$labels$alt <- get_alt_text(plot)
structure(list(data = data, layout = layout, plot = plot),
class = "ggplot_built")
}
P6<-clusterProfiler::cnetplot(de_go,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P<-barplot(de_go_P1_vs_P2,showCategory = 10)
P<-barplot(de_go_P1_vs_P2,showCategory = 10)
pdf("test.pdf",width =30, height=16)
difgene_P1_vs_P2_DE<-read.table("P1_vs_P5_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
P<-barplot(de_go,showCategory = 10)
pdf("test.pdf",width =30, height=16)
P1
P
difgene_P1_vs_P2_DE<-read.table("P1_vs_P5_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
P<-barplot(de_go,showCategory = 10)
pdf("test.pdf",width =30, height=16)
P<-barplot(de_go,showCategory = 10)
dev.off()
difgene_P1_vs_P2_DE<-read.table("P1_vs_P5_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
pdf("test.pdf",width =30, height=16)
P<-barplot(de_go_P1_vs_P2,showCategory = 10)
dev.off()
print(P)
difgene_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
pdf("test.pdf",width =30, height=16)
P<-barplot(de_go_P1_vs_P2,showCategory = 10)
dev.off()
print(P)
View(de_go_P1_vs_P2)
View(dif_DE)
View(difgene_P1_vs_P2_DE)
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
P<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P)
P1<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P1)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P1<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P1)
######函数
ggplot_build.gg <-
function (plot){
# cat("ggplot_build.ggplot called...\n\n")
plot <- ggplot2:::plot_clone(plot)
if (length(plot$layers) == 0) {
plot <- plot + geom_blank()
}
layers <- plot$layers
layer_data <- lapply(layers, function(y) y$layer_data(plot$data))
scales <- plot$scales
by_layer <- function(f) {
out <- vector("list", length(data))
for (i in seq_along(data)) {
out[[i]] <- f(l = layers[[i]], d = data[[i]])
}
out
}
data <- layer_data
data <- by_layer(function(l, d) l$setup_layer(d, plot))
layout <- ggplot2:::create_layout(plot$facet, plot$coordinates)
data <- layout$setup(data, plot$data, plot$plot_env)
data <- by_layer(function(l, d) l$compute_aesthetics(d, plot))
# AsIs出现在下一条命令，原因未知
data <- lapply(data, ggplot2:::scales_transform_df, scales = scales)
scale_x <- function() scales$get_scales("x")
scale_y <- function() scales$get_scales("y")
layout$train_position(data, scale_x(), scale_y())
data <- layout$map_position(data)
data <- by_layer(function(l, d) l$compute_statistic(d, layout))
data <- by_layer(function(l, d) l$map_statistic(d, plot))
ggplot2:::scales_add_missing(plot, c("x", "y"), plot$plot_env)
data <- by_layer(function(l, d) l$compute_geom_1(d))
data <- by_layer(function(l, d) l$compute_position(d, layout))
layout$reset_scales()
layout$train_position(data, scale_x(), scale_y())
layout$setup_panel_params()
data <- layout$map_position(data)
npscales <- scales$non_position_scales()
if (npscales$n() > 0) {
lapply(data, ggplot2:::scales_train_df, scales = npscales)
# fix bug
for(i in seq_along(data)){
is_AsIs <- vapply(data[[i]], function(x) "AsIs" %in% class(x), FUN.VALUE = logical(1))
if(sum(is_AsIs) > 0){
col_with_bug <- which(is_AsIs)
for(j in col_with_bug){
data[[i]][[j]] <- unclass(data[[i]][[j]])
}
}
}
# 报错在此处，由于data中的AsIs对象的存在
data <- lapply(data, ggplot2:::scales_map_df, scales = npscales)
}
data <- by_layer(function(l, d) l$compute_geom_2(d))
data <- by_layer(function(l, d) l$finish_statistics(d))
data <- layout$finish_data(data)
plot$labels$alt <- get_alt_text(plot)
structure(list(data = data, layout = layout, plot = plot),
class = "ggplot_built")
}
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P1<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P1)
de_go_P1_vs_P2_df
difgene_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
library(AnnotationForge)
library(GO.db)
library(pkgbuild)
library(org.By3.eg.db,lib='R_library')
#colnames(org.My.eg.db)
#keys(org.My.eg.db)
#BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(tidyverse)
difgene_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P1<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P1)
colnames(difgene_P1_vs_P2_DE)<-c("GID","logFC")
difgene_P1_vs_P2_DE
difgene_P1_vs_P2_DE$logFC<-as.numeric(difgene_P1_vs_P2_DE$logFC)
geneList<-difgene_P1_vs_P2_DE$logFC
names(geneList)<-difgene_P1_vs_P2_DE$GID
geneList<-sort(geneList,decreasing = TRUE)
P6<-clusterProfiler::cnetplot(de_go,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
de_go_P1_vs_P2
######函数
ggplot_build.gg <-
function (plot){
# cat("ggplot_build.ggplot called...\n\n")
plot <- ggplot2:::plot_clone(plot)
if (length(plot$layers) == 0) {
plot <- plot + geom_blank()
}
layers <- plot$layers
layer_data <- lapply(layers, function(y) y$layer_data(plot$data))
scales <- plot$scales
by_layer <- function(f) {
out <- vector("list", length(data))
for (i in seq_along(data)) {
out[[i]] <- f(l = layers[[i]], d = data[[i]])
}
out
}
data <- layer_data
data <- by_layer(function(l, d) l$setup_layer(d, plot))
layout <- ggplot2:::create_layout(plot$facet, plot$coordinates)
data <- layout$setup(data, plot$data, plot$plot_env)
data <- by_layer(function(l, d) l$compute_aesthetics(d, plot))
# AsIs出现在下一条命令，原因未知
data <- lapply(data, ggplot2:::scales_transform_df, scales = scales)
scale_x <- function() scales$get_scales("x")
scale_y <- function() scales$get_scales("y")
layout$train_position(data, scale_x(), scale_y())
data <- layout$map_position(data)
data <- by_layer(function(l, d) l$compute_statistic(d, layout))
data <- by_layer(function(l, d) l$map_statistic(d, plot))
ggplot2:::scales_add_missing(plot, c("x", "y"), plot$plot_env)
data <- by_layer(function(l, d) l$compute_geom_1(d))
data <- by_layer(function(l, d) l$compute_position(d, layout))
layout$reset_scales()
layout$train_position(data, scale_x(), scale_y())
layout$setup_panel_params()
data <- layout$map_position(data)
npscales <- scales$non_position_scales()
if (npscales$n() > 0) {
lapply(data, ggplot2:::scales_train_df, scales = npscales)
# fix bug
for(i in seq_along(data)){
is_AsIs <- vapply(data[[i]], function(x) "AsIs" %in% class(x), FUN.VALUE = logical(1))
if(sum(is_AsIs) > 0){
col_with_bug <- which(is_AsIs)
for(j in col_with_bug){
data[[i]][[j]] <- unclass(data[[i]][[j]])
}
}
}
# 报错在此处，由于data中的AsIs对象的存在
data <- lapply(data, ggplot2:::scales_map_df, scales = npscales)
}
data <- by_layer(function(l, d) l$compute_geom_2(d))
data <- by_layer(function(l, d) l$finish_statistics(d))
data <- layout$finish_data(data)
plot$labels$alt <- get_alt_text(plot)
structure(list(data = data, layout = layout, plot = plot),
class = "ggplot_built")
}
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
difgene_P1_vs_P2_DE$logFC
geneList<-difgene_P1_vs_P2_DE$logFC
names(geneList)<-difgene_P1_vs_P2_DE$GID
geneList
geneList<-sort(geneList,decreasing = TRUE)
geneList
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P7<-clusterProfiler::cnetplot(de_go24_12,
foldChange =geneList_24_12,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
install.packages("devtools")
devtools::install_github('thomasp85/transformr')
devtools::install_github('thomasp85/gganimate')
library(ggplot2)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
#colnames(org.My.eg.db)
#keys(org.My.eg.db)
#BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(tidyverse)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
de_go12_4_1 <- setReadable(de_go12_4,OrgDb= org.By3.eg.db, keyType = "Gene_Name")
de_go12_4_1 <- setReadable(de_go_P1_vs_P2,OrgDb= org.By3.eg.db, keyType = "Gene_Name")
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P7<-clusterProfiler::cnetplot(de_go24_12,
foldChange =geneList_24_12,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
library(dplyr)
library(tidyr)
library(AnnotationForge)
library(GO.db)
library(pkgbuild)
library(org.By3.eg.db,lib='R_library')
difgene_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P1<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P1)
#colnames(org.My.eg.db)
#keys(org.My.eg.db)
#BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(tidyverse)
library(gridExtra)
difgene_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P1<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P1)
P11<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P11)
difgene_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(difgene_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(difgene_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P11<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P11)
colnames(difgene_P1_vs_P2_DE)<-c("GID","logFC")
difgene_P1_vs_P2_DE$logFC<-as.numeric(difgene_P1_vs_P2_DE$logFC)
geneList<-difgene_P1_vs_P2_DE$logFC
names(geneList)<-difgene_P1_vs_P2_DE$GID
geneList<-sort(geneList,decreasing = TRUE)
de_go12_4_1 <- setReadable(de_go_P1_vs_P2,OrgDb= org.By3.eg.db, keyType = "Gene_Name")
P6<-clusterProfiler::cnetplot(difgene_P1_vs_P2_DE,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
dif_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
dif_P1_vs_P2_DE<-read.table("P1_vs_P2_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(dif_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(dif_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P11<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P11)
colnames(dif_P1_vs_P2_DE)<-c("GID","logFC")
dif_P1_vs_P2_DE$logFC<-as.numeric(dif_P1_vs_P2_DE$logFC)
geneList<-dif_P1_vs_P2_DE$logFC
names(geneList)<-dif_P1_vs_P2_DE$GID
geneList<-sort(geneList,decreasing = TRUE)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
dif_P1_vs_P2_DE<-read.table("P1_vs_P3_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(dif_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(dif_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P11<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P11)
colnames(dif_P1_vs_P2_DE)<-c("GID","logFC")
dif_P1_vs_P2_DE$logFC<-as.numeric(dif_P1_vs_P2_DE$logFC)
geneList<-dif_P1_vs_P2_DE$logFC
names(geneList)<-dif_P1_vs_P2_DE$GID
geneList<-sort(geneList,decreasing = TRUE)
de_go12_4_1 <- setReadable(de_go_P1_vs_P2,OrgDb= org.By3.eg.db, keyType = "Gene_Name")
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
library(RColorBrewer)
dif_P1_vs_P2_DE<-read.table("P1_vs_P3_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(dif_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(dif_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P11<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P11)
colnames(dif_P1_vs_P2_DE)<-c("GID","logFC")
dif_P1_vs_P2_DE$logFC<-as.numeric(dif_P1_vs_P2_DE$logFC)
geneList<-dif_P1_vs_P2_DE$logFC
names(geneList)<-dif_P1_vs_P2_DE$GID
geneList<-sort(geneList,decreasing = TRUE)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
library(RColorBrewer)
dif_P1_vs_P2_DE<-read.table("P1_vs_P3_DE.tsv",header = TRUE, sep="\t")%>%dplyr::select(gene_id,log2FoldChange)
colnames(dif_P1_vs_P2_DE) <- c("GID", "P1_vs_P2_DE")
gene_P1_vs_P2_DE<-pull(dif_P1_vs_P2_DE,GID)
de_go_P1_vs_P2<-enrichGO(gene=gene_P1_vs_P2_DE,
OrgDb=org.By3.eg.db,
keyType ='GID',
ont ='ALL',
qvalueCutoff=0.05,
pvalueCutoff=0.05)
de_go_P1_vs_P2_df<-as.data.frame(de_go_P1_vs_P2)
P11<-barplot(de_go_P1_vs_P2,showCategory = 10)
print(P11)
colnames(dif_P1_vs_P2_DE)<-c("GID","logFC")
dif_P1_vs_P2_DE$logFC<-as.numeric(dif_P1_vs_P2_DE$logFC)
geneList<-dif_P1_vs_P2_DE$logFC
names(geneList)<-dif_P1_vs_P2_DE$GID
geneList<-sort(geneList,decreasing = TRUE)
de_go12_4_1 <- setReadable(de_go_P1_vs_P2,OrgDb= org.By3.eg.db, keyType = "Gene_Name")
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
circular=TRUE,
colorEdge=TRUE)
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
color.params = list(foldChange = NULL,
edge = FALSE,
category = "#E5C494",
gene = "#B3B3B3")，
P6<-clusterProfiler::cnetplot(de_go_P1_vs_P2,
foldChange =geneList,
node_laber="category",
showCategory = 5,
color.params = list(foldChange = NULL,
edge = FALSE,
category = "#E5C494",
gene = "#B3B3B3"),
circular=TRUE,
colorEdge=TRUE)
View(P11)
geneList
View(de_go_P1_vs_P2_df)
